"""
Django settings for giving_pilot project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
import environ

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

environ.Env.read_env('.dev.env')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(os.path.dirname(__file__))
# STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')
STATIC_ROOT = "/static/"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '@i0#h)oo_vxq8#@gbnl-0+$vyyfl-*#i15z#=vh@^hyakbt(f6'
# SECRET_KEY = os.getenv('SECRET_KEY')
SECRET_KEY = env.get_value("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['giving-pilot-dev.com',
#                  'localhost', '127.0.0.1', '165.22.190.152']
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'social_django',
    'mathfilters',
    # 'django_extensions',

    # local
    'accounts',
    'dashboard',
    'landing',

    # django 3rd-party app
    'django_sass',
    'fontawesome-free',

    # payment
    'payments.apps.PaymentsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'giving_pilot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'giving_pilot.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
        # 'default': {
        #     'ENGINE': 'django.db.backends.sqlite3',
        #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # },
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': env.get_value("DB_NAME"),
            'USER': env.get_value("DB_USER"),
            'PASSWORD': env.get_value("DB_PASS"),
            'HOST': env.get_value("DB_HOST"),
            'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

DATA_UPLOAD_MAX_MEMORY_SIZE = 5242880 * 10

# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_HOST_USER = "hola@provogram.com"
# EMAIL_HOST_PASSWORD = 'xmubqbcnyxpwwnhf'
# EMAIL_PORT = 465
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = env.get_value("EMAIL_HOST")
EMAIL_HOST_USER = env.get_value("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env.get_value("EMAIL_HOST_PASSWORD")
EMAIL_PORT = env.get_value("EMAIL_PORT")
# EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.linkedin.LinkedinOAuth2',
    'social_core.backends.google.GoogleOAuth2',
]

SOCIAL_AUTH_URL_NAMESPACE = 'social'

SOCIAL_AUTH_FACEBOOK_KEY = env.get_value("SOCIAL_AUTH_FACEBOOK_KEY")
SOCIAL_AUTH_FACEBOOK_SECRET = env.get_value("SOCIAL_AUTH_FACEBOOK_SECRET")

SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = env.get_value("SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY")
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = env.get_value("SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET")

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = env.get_value("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = env.get_value("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET")

SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'email',
}

SOCIAL_AUTH_GOOGLE_OAUTH2_USER_FIELDS = ['email', ]

SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_liteprofile', 'r_emailaddress']
SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['emailAddress', ]
SOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [('emailAddress', 'email_address')]

STRIPE_PUBLISHABLE_KEY = env.get_value("STRIPE_PUBLISHABLE_KEY")
STRIPE_SECRET_KEY = env.get_value("STRIPE_SECRET_KEY")

STRIPE_CONNECT_CLIENT_ID = env.get_value("STRIPE_CONNECT_CLIENT_ID")

STRIPE_ENDPOINT_SECRET = env.get_value("STRIPE_ENDPOINT_SECRET")

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_URL = 'login'

LOGOUT_URL = 'logout'

LOGIN_REDIRECT_URL = 'index'

LOGOUT_REDIRECT_URL = 'login'

STATIC_URL = '/static/'
# STATIC_DIR = os.path.join(BASE_DIR, 'static')
# STATICFILES_DIRS = [Path(BASE_DIR).joinpath('static')]
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES = [
    STATIC_ROOT
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'dashboard', 'static'),
    os.path.join(BASE_DIR, 'accounts', 'static'),
    os.path.join(BASE_DIR, 'landing', 'static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

CAMPAIGN_ID = ''
